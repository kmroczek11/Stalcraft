{"ast":null,"code":"import _createForOfIteratorHelper from \"C:\\\\Users\\\\Kamil\\\\Desktop\\\\stalcraft\\\\Stalcraft\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\Kamil\\\\Desktop\\\\stalcraft\\\\Stalcraft\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Kamil\\\\Desktop\\\\stalcraft\\\\Stalcraft\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { Component, EventEmitter, Inject, Injectable, Input, NgModule, NgZone, Output, PLATFORM_ID, Renderer2, ViewChild } from '@angular/core';\nimport { CommonModule, DOCUMENT, isPlatformServer } from '@angular/common';\nimport { BrowserTransferStateModule, DomSanitizer, TransferState, makeStateKey } from '@angular/platform-browser';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nimport * as ɵngcc2 from '@angular/common';\nvar _c0 = [\"container\"];\nvar _c1 = [\"prevArrow\"];\nvar _c2 = [\"nextArrow\"];\n\nfunction SlideshowComponent_a_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 15);\n  }\n}\n\nvar _c3 = function _c3(a0, a1) {\n  return {\n    \"color\": a0,\n    \"background-color\": a1\n  };\n};\n\nfunction SlideshowComponent_a_4_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 16);\n  }\n\n  if (rf & 2) {\n    var slide_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction2(2, _c3, ctx_r8.captionColor, ctx_r8.captionBackground))(\"innerHTML\", slide_r5 == null ? null : slide_r5.image == null ? null : slide_r5.image.caption, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction SlideshowComponent_a_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function SlideshowComponent_a_4_Template_a_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.onClick($event);\n    });\n    ɵngcc0.ɵɵtemplate(1, SlideshowComponent_a_4_div_1_Template, 1, 0, \"div\", 13);\n    ɵngcc0.ɵɵtemplate(2, SlideshowComponent_a_4_div_2_Template, 1, 5, \"div\", 14);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var slide_r5 = ctx.$implicit;\n    var i_r6 = ctx.index;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"selected\", slide_r5 == null ? null : slide_r5.selected)(\"hide-slide\", !(slide_r5 == null ? null : slide_r5.selected) && !(slide_r5 == null ? null : slide_r5.leftSide) && !(slide_r5 == null ? null : slide_r5.rightSide))(\"left-side\", slide_r5 == null ? null : slide_r5.leftSide)(\"right-side\", slide_r5 == null ? null : slide_r5.rightSide)(\"slide-in-left\", (slide_r5 == null ? null : slide_r5.action) === \"slideInLeft\")(\"slide-in-right\", (slide_r5 == null ? null : slide_r5.action) === \"slideInRight\")(\"slide-out-left\", (slide_r5 == null ? null : slide_r5.action) === \"slideOutLeft\")(\"slide-out-right\", (slide_r5 == null ? null : slide_r5.action) === \"slideOutRight\")(\"link\", (slide_r5 == null ? null : slide_r5.image == null ? null : slide_r5.image.clickAction) || (slide_r5 == null ? null : slide_r5.image == null ? null : slide_r5.image.href));\n    ɵngcc0.ɵɵpropertyInterpolate(\"href\", (slide_r5 == null ? null : slide_r5.image == null ? null : slide_r5.image.clickAction) ? \"#\" : slide_r5 == null ? null : slide_r5.image == null ? null : slide_r5.image.href, ɵngcc0.ɵɵsanitizeUrl);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", slide_r5 == null ? null : slide_r5.image == null ? null : slide_r5.image.title);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r1.getSlideStyle(i_r6));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !(slide_r5 == null ? null : slide_r5.loaded));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.showCaptions && (slide_r5 == null ? null : slide_r5.image == null ? null : slide_r5.image.caption));\n  }\n}\n\nfunction SlideshowComponent_ul_11_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r16 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 19);\n    ɵngcc0.ɵɵlistener(\"click\", function SlideshowComponent_ul_11_li_1_Template_li_click_0_listener() {\n      var restoredCtx = ɵngcc0.ɵɵrestoreView(_r16);\n      var i_r14 = restoredCtx.index;\n      var ctx_r15 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r15.goToSlide(i_r14);\n    });\n    ɵngcc0.ɵɵelementStart(1, \"button\", 20);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var slide_r13 = ctx.$implicit;\n    var i_r14 = ctx.index;\n    var ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"slick-active\", slide_r13.selected);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"style\", ctx_r12.safeStyleDotColor, ɵngcc0.ɵɵsanitizeStyle);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", i_r14, \" \");\n  }\n}\n\nfunction SlideshowComponent_ul_11_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 17);\n    ɵngcc0.ɵɵtemplate(1, SlideshowComponent_ul_11_li_1_Template, 3, 4, \"li\", 18);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r4.slides)(\"ngForTrackBy\", ctx_r4.trackByFn);\n  }\n}\n\nvar SwipeService = /*#__PURE__*/(function () {\n  var SwipeService = /*#__PURE__*/function () {\n    function SwipeService() {\n      _classCallCheck(this, SwipeService);\n    }\n\n    _createClass(SwipeService, [{\n      key: \"swipe\",\n      value:\n      /**\n       * \\@description detect the direction of the swipe, and return a -1 or 1 if the duration is long enough\n       *              else return a 0 to do nothing\n       * @param {?} e\n       * @param {?} when\n       * @return {?}\n       */\n      function swipe(e, when) {\n        var\n        /** @type {?} */\n        coord = [e.changedTouches[0].pageX, e.changedTouches[0].pageY];\n        var\n        /** @type {?} */\n        time = new Date().getTime();\n\n        if (when === 'start') {\n          this._swipeCoord = coord;\n          this._swipeTime = time;\n        } else if (when === 'end') {\n          var\n          /** @type {?} */\n          direction = [coord[0] - this._swipeCoord[0], coord[1] - this._swipeCoord[1]];\n          var\n          /** @type {?} */\n          duration = time - this._swipeTime;\n\n          if (duration < 1000 // Short enough\n          && Math.abs(direction[1]) < Math.abs(direction[0]) // Horizontal enough\n          && Math.abs(direction[0]) > 30) {\n            return direction[0] < 0 ? 1 : -1;\n          }\n        }\n\n        return 0;\n      }\n    }]);\n\n    return SwipeService;\n  }();\n\n  SwipeService.ɵfac = function SwipeService_Factory(t) {\n    return new (t || SwipeService)();\n  };\n\n  SwipeService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: SwipeService,\n    factory: SwipeService.ɵfac\n  });\n  /**\n   * @nocollapse\n   */\n\n  return SwipeService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar FIRST_SLIDE_KEY = makeStateKey('firstSlide');\nvar SlideshowComponent = /*#__PURE__*/(function () {\n  var SlideshowComponent = /*#__PURE__*/function () {\n    /**\n     * @param {?} _swipeService\n     * @param {?} _renderer\n     * @param {?} _transferState\n     * @param {?} _ngZone\n     * @param {?} sanitizer\n     * @param {?} platform_id\n     * @param {?} document\n     */\n    function SlideshowComponent(_swipeService, _renderer, _transferState, _ngZone, sanitizer, platform_id, document) {\n      _classCallCheck(this, SlideshowComponent);\n\n      this._swipeService = _swipeService;\n      this._renderer = _renderer;\n      this._transferState = _transferState;\n      this._ngZone = _ngZone;\n      this.sanitizer = sanitizer;\n      this.platform_id = platform_id;\n      this.document = document;\n      this.slideIndex = -1;\n      this.slides = [];\n      this._initial = true;\n      this._isHidden = false;\n      this.imageUrls = [];\n      this.height = '100%';\n      this.showArrows = true;\n      this.disableSwiping = false;\n      this.autoPlay = false;\n      this.autoPlayInterval = 3333;\n      this.stopAutoPlayOnSlide = true;\n      this.autoPlayWaitForLazyLoad = false;\n      this.backgroundSize = 'cover';\n      this.backgroundPosition = 'center center';\n      this.backgroundRepeat = 'no-repeat';\n      this.showDots = false;\n      this.dotColor = '#FFF';\n      this.showCaptions = true;\n      this.captionColor = '#FFF';\n      this.captionBackground = 'rgba(0, 0, 0, .35)';\n      this.lazyLoad = false;\n      this.hideOnNoSlides = false;\n      this.fullscreen = false;\n      this.onSlideLeft = new EventEmitter();\n      this.onSlideRight = new EventEmitter();\n      this.onSwipeLeft = new EventEmitter();\n      this.onSwipeRight = new EventEmitter();\n      this.onFullscreenExit = new EventEmitter();\n      this.onIndexChanged = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n\n\n    _createClass(SlideshowComponent, [{\n      key: \"safeStyleDotColor\",\n      get: function get() {\n        return this.sanitizer.bypassSecurityTrustStyle(\"--dot-color: \".concat(this.dotColor));\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        if (this.debug !== undefined) {\n          console.warn('[Deprecation Warning]: The debug input will be removed from ng-simple-slideshow in 1.3.0');\n        }\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngDoCheck\",\n      value: function ngDoCheck() {\n        // if this is the first being called, create a copy of the input\n        if (this.imageUrls && this.imageUrls.length > 0) {\n          if (this._initial === true) {\n            this._urlCache = Array.from(this.imageUrls);\n          }\n\n          if (this._isHidden === true) {\n            this._renderer.removeStyle(this.container.nativeElement, 'display');\n\n            this._isHidden = false;\n          }\n\n          this.setSlides();\n        } else if (this.hideOnNoSlides === true) {\n          this._renderer.setStyle(this.container.nativeElement, 'display', 'none');\n\n          this._isHidden = true;\n        }\n\n        this.setStyles();\n        this.handleAutoPlay();\n      }\n      /**\n       * \\@description this is the function that should be called to make the slides change.\n       *              indexDirection to move back is -1, to move forward is 1, and to stay in place is 0.\n       *              0 is taken into account for failed swipes\n       * @param {?} indexDirection\n       * @param {?=} isSwipe\n       * @return {?}\n       */\n\n    }, {\n      key: \"onSlide\",\n      value: function onSlide(indexDirection, isSwipe) {\n        this.handleAutoPlay(this.stopAutoPlayOnSlide);\n        this.slide(indexDirection, isSwipe);\n      }\n      /**\n       * \\@description Use the swipe service to detect swipe events from phone and tablets\n       * @param {?} e\n       * @param {?} when\n       * @return {?}\n       */\n\n    }, {\n      key: \"onSwipe\",\n      value: function onSwipe(e, when) {\n        if (this.disableSwiping === true) {\n          return;\n        }\n\n        var\n        /** @type {?} */\n        indexDirection = this._swipeService.swipe(e, when); // handle a failed swipe\n\n\n        if (indexDirection === 0) {\n          return;\n        } else {\n          this.onSlide(indexDirection, true);\n        }\n      }\n      /**\n       * \\@description Redirect to current slide \"href\" if defined\n       * @param {?} e\n       * @return {?}\n       */\n\n    }, {\n      key: \"onClick\",\n      value: function onClick(e) {\n        e.preventDefault();\n        var\n        /** @type {?} */\n        currentSlide = this.slides.length > 0 && this.slides[this.slideIndex];\n\n        if (currentSlide && currentSlide.image.clickAction) {\n          currentSlide.image.clickAction();\n        } else if (currentSlide && currentSlide.image.href) {\n          this.document.location.href = currentSlide.image.href;\n        }\n      }\n      /**\n       * \\@description set the index to the desired index - 1 and simulate a right slide\n       * @param {?} index\n       * @return {?}\n       */\n\n    }, {\n      key: \"goToSlide\",\n      value: function goToSlide(index) {\n        var\n        /** @type {?} */\n        beforeClickIndex = this.slideIndex;\n        this.slideIndex = index - 1;\n        this.setSlideIndex(1);\n\n        if (!this.slides[this.slideIndex].loaded) {\n          this.loadRemainingSlides();\n        }\n\n        this.handleAutoPlay(this.stopAutoPlayOnSlide);\n        this.slideRight(beforeClickIndex);\n        this.slides[beforeClickIndex].selected = false;\n        this.slides[this.slideIndex].selected = true;\n      }\n      /**\n       * \\@description set the index to the desired index - 1 and simulate a right slide\n       * @param {?} index\n       * @return {?}\n       */\n\n    }, {\n      key: \"getSlideStyle\",\n      value: function getSlideStyle(index) {\n        var\n        /** @type {?} */\n        slide = this.slides[index];\n\n        if (slide.loaded) {\n          return {\n            \"background-image\": 'url(' + slide.image.url + ')',\n            \"background-size\": slide.image.backgroundSize || this.backgroundSize,\n            \"background-position\": slide.image.backgroundPosition || this.backgroundPosition,\n            \"background-repeat\": slide.image.backgroundRepeat || this.backgroundRepeat\n          };\n        } else {\n          // doesn't compile correctly if returning an empty object, sooooo.....\n          return {\n            \"background-image\": undefined,\n            \"background-size\": undefined,\n            \"background-position\": undefined,\n            \"background-repeat\": undefined\n          };\n        }\n      }\n      /**\n       * @param {?} e\n       * @return {?}\n       */\n\n    }, {\n      key: \"exitFullScreen\",\n      value: function exitFullScreen(e) {\n        e.preventDefault();\n        this.fullscreen = false;\n        this.onFullscreenExit.emit(true);\n      }\n      /**\n       * \\@description Set the new slide index, then make the transition happen.\n       * @param {?} indexDirection\n       * @param {?=} isSwipe\n       * @return {?}\n       */\n\n    }, {\n      key: \"slide\",\n      value: function slide(indexDirection, isSwipe) {\n        var\n        /** @type {?} */\n        oldIndex = this.slideIndex;\n        this.setSlideIndex(indexDirection);\n\n        if (!this.slides[this.slideIndex].loaded) {\n          this.loadRemainingSlides();\n        }\n\n        if (indexDirection === 1) {\n          this.slideRight(oldIndex, isSwipe);\n        } else {\n          this.slideLeft(oldIndex, isSwipe);\n        }\n\n        this.slides[oldIndex].selected = false;\n        this.slides[this.slideIndex].selected = true;\n      }\n      /**\n       * \\@description This is just treating the url array like a circular list.\n       * @param {?} indexDirection\n       * @return {?}\n       */\n\n    }, {\n      key: \"setSlideIndex\",\n      value: function setSlideIndex(indexDirection) {\n        this.slideIndex += indexDirection;\n\n        if (this.slideIndex < 0) {\n          this.slideIndex = this.slides.length - 1;\n        }\n\n        if (this.slideIndex >= this.slides.length) {\n          this.slideIndex = 0;\n        }\n\n        this.onIndexChanged.emit(this.slideIndex);\n      }\n      /**\n       * \\@description This function handles the variables to move the CSS classes around accordingly.\n       *              In order to correctly handle animations, the new slide as well as the slides to\n       *              the left and right are assigned classes.\n       * @param {?} oldIndex\n       * @param {?=} isSwipe\n       * @return {?}\n       */\n\n    }, {\n      key: \"slideLeft\",\n      value: function slideLeft(oldIndex, isSwipe) {\n        if (isSwipe === true) {\n          this.onSwipeLeft.emit(this.slideIndex);\n        } else {\n          this.onSlideLeft.emit(this.slideIndex);\n        }\n\n        this.slides[this.getLeftSideIndex(oldIndex)].leftSide = false;\n        this.slides[oldIndex].leftSide = true;\n        this.slides[oldIndex].action = 'slideOutLeft';\n        this.slides[this.slideIndex].rightSide = false;\n        this.slides[this.getRightSideIndex()].rightSide = true;\n        this.slides[this.slideIndex].action = 'slideInRight';\n      }\n      /**\n       * \\@description This function handles the variables to move the CSS classes around accordingly.\n       *              In order to correctly handle animations, the new slide as well as the slides to\n       *              the left and right are assigned classes.\n       * @param {?} oldIndex\n       * @param {?=} isSwipe\n       * @return {?}\n       */\n\n    }, {\n      key: \"slideRight\",\n      value: function slideRight(oldIndex, isSwipe) {\n        if (isSwipe === true) {\n          this.onSwipeRight.emit(this.slideIndex);\n        } else {\n          this.onSlideRight.emit(this.slideIndex);\n        }\n\n        this.slides[this.getRightSideIndex(oldIndex)].rightSide = false;\n        this.slides[oldIndex].rightSide = true;\n        this.slides[oldIndex].action = 'slideOutRight';\n        this.slides[this.slideIndex].leftSide = false;\n        this.slides[this.getLeftSideIndex()].leftSide = true;\n        this.slides[this.slideIndex].action = 'slideInLeft';\n      }\n      /**\n       * \\@description Check to make sure slide images have been set or haven't changed\n       * @return {?}\n       */\n\n    }, {\n      key: \"setSlides\",\n      value: function setSlides() {\n        if (this.imageUrls) {\n          if (this.checkCache() || this._initial === true) {\n            this._initial = false;\n            this._urlCache = Array.from(this.imageUrls);\n            this.slides = [];\n\n            if (this.lazyLoad === true) {\n              this.buildLazyLoadSlideArray();\n            } else {\n              this.buildSlideArray();\n            }\n          }\n        }\n      }\n      /**\n       * \\@description create the slides without background urls, which will be added in\n       *              for the \"lazy load,\" then load only the first slide\n       * @return {?}\n       */\n\n    }, {\n      key: \"buildLazyLoadSlideArray\",\n      value: function buildLazyLoadSlideArray() {\n        var _iterator = _createForOfIteratorHelper(this.imageUrls),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var image = _step.value;\n            this.slides.push({\n              image: typeof image === 'string' ? {\n                url: null\n              } : {\n                url: null,\n                href: image.href || ''\n              },\n              action: '',\n              leftSide: false,\n              rightSide: false,\n              selected: false,\n              loaded: false\n            });\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        this.slideIndex = 0;\n        this.slides[this.slideIndex].selected = true;\n        this.loadFirstSlide();\n        this.onIndexChanged.emit(this.slideIndex);\n      }\n      /**\n       * \\@description create the slides with background urls all at once\n       * @return {?}\n       */\n\n    }, {\n      key: \"buildSlideArray\",\n      value: function buildSlideArray() {\n        var _iterator2 = _createForOfIteratorHelper(this.imageUrls),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var image = _step2.value;\n            this.slides.push({\n              image: typeof image === 'string' ? {\n                url: image\n              } : image,\n              action: '',\n              leftSide: false,\n              rightSide: false,\n              selected: false,\n              loaded: true\n            });\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        this.slideIndex = 0;\n        this.slides[this.slideIndex].selected = true;\n        this.onIndexChanged.emit(this.slideIndex);\n      }\n      /**\n       * \\@description load the first slide image if lazy loading\n       *              this takes server side and browser side into account\n       * @return {?}\n       */\n\n    }, {\n      key: \"loadFirstSlide\",\n      value: function loadFirstSlide() {\n        var _this = this;\n\n        var\n        /** @type {?} */\n        tmpIndex = this.slideIndex;\n        var\n        /** @type {?} */\n        tmpImage = this.imageUrls[tmpIndex]; // if server side, we don't need to worry about the rest of the slides\n\n        if (isPlatformServer(this.platform_id)) {\n          this.slides[tmpIndex].image = typeof tmpImage === 'string' ? {\n            url: tmpImage\n          } : tmpImage;\n          this.slides[tmpIndex].loaded = true;\n\n          this._transferState.set(FIRST_SLIDE_KEY, this.slides[tmpIndex]);\n        } else {\n          var\n          /** @type {?} */\n          firstSlideFromTransferState = this._transferState.get(FIRST_SLIDE_KEY,\n          /** @type {?} */\n          null); // if the first slide didn't finish loading on the server side, we need to load it\n\n\n          if (firstSlideFromTransferState === null) {\n            var\n            /** @type {?} */\n            loadImage = new Image();\n            loadImage.src = typeof tmpImage === 'string' ? tmpImage : tmpImage.url;\n            loadImage.addEventListener('load', function () {\n              _this.slides[tmpIndex].image = typeof tmpImage === 'string' ? {\n                url: tmpImage\n              } : tmpImage;\n              _this.slides[tmpIndex].loaded = true;\n            });\n          } else {\n            this.slides[tmpIndex] = firstSlideFromTransferState;\n\n            this._transferState.remove(FIRST_SLIDE_KEY);\n          }\n        }\n      }\n      /**\n       * \\@description if lazy loading in browser, start loading remaining slides\n       * \\@todo: figure out how to not show the spinner if images are loading fast enough\n       * @return {?}\n       */\n\n    }, {\n      key: \"loadRemainingSlides\",\n      value: function loadRemainingSlides() {\n        var _this2 = this;\n\n        var _loop = function _loop(i) {\n          if (!_this2.slides[i].loaded) {\n            new Promise(function (resolve) {\n              var\n              /** @type {?} */\n              tmpImage = _this2.imageUrls[i];\n              var\n              /** @type {?} */\n              loadImage = new Image();\n              loadImage.addEventListener('load', function () {\n                _this2.slides[i].image = typeof tmpImage === 'string' ? {\n                  url: tmpImage\n                } : tmpImage;\n                _this2.slides[i].loaded = true;\n                resolve();\n              });\n              loadImage.src = typeof tmpImage === 'string' ? tmpImage : tmpImage.url;\n            });\n          }\n        };\n\n        for (var\n        /** @type {?} */\n        i = 0; i < this.slides.length; i++) {\n          _loop(i);\n        }\n      }\n      /**\n       * \\@description Start or stop autoPlay, don't do it at all server side\n       * @param {?=} stopAutoPlay\n       * @return {?}\n       */\n\n    }, {\n      key: \"handleAutoPlay\",\n      value: function handleAutoPlay(stopAutoPlay) {\n        var _this3 = this;\n\n        if (isPlatformServer(this.platform_id)) {\n          return;\n        }\n\n        if (stopAutoPlay === true || this.autoPlay === false) {\n          if (this._autoplayIntervalId) {\n            this._ngZone.runOutsideAngular(function () {\n              return clearInterval(_this3._autoplayIntervalId);\n            });\n\n            this._autoplayIntervalId = null;\n          }\n        } else if (!this._autoplayIntervalId) {\n          this._ngZone.runOutsideAngular(function () {\n            _this3._autoplayIntervalId = setInterval(function () {\n              if (!_this3.autoPlayWaitForLazyLoad || _this3.autoPlayWaitForLazyLoad && _this3.slides[_this3.slideIndex].loaded) {\n                _this3._ngZone.run(function () {\n                  return _this3.slide(1);\n                });\n              }\n            }, _this3.autoPlayInterval);\n          });\n        }\n      }\n      /**\n       * \\@description Keep the styles up to date with the input\n       * @return {?}\n       */\n\n    }, {\n      key: \"setStyles\",\n      value: function setStyles() {\n        if (this.fullscreen) {\n          this._renderer.setStyle(this.container.nativeElement, 'height', '100%'); // Would be nice to make it configurable\n\n\n          this._renderer.setStyle(this.container.nativeElement, 'background-color', 'white');\n        } else {\n          // Would be nice to make it configurable\n          this._renderer.removeStyle(this.container.nativeElement, 'background-color');\n\n          if (this.height) {\n            this._renderer.setStyle(this.container.nativeElement, 'height', this.height);\n          }\n\n          if (this.minHeight) {\n            this._renderer.setStyle(this.container.nativeElement, 'min-height', this.minHeight);\n          }\n        }\n\n        if (this.arrowSize) {\n          this._renderer.setStyle(this.prevArrow.nativeElement, 'height', this.arrowSize);\n\n          this._renderer.setStyle(this.prevArrow.nativeElement, 'width', this.arrowSize);\n\n          this._renderer.setStyle(this.nextArrow.nativeElement, 'height', this.arrowSize);\n\n          this._renderer.setStyle(this.nextArrow.nativeElement, 'width', this.arrowSize);\n        }\n      }\n      /**\n       * \\@description compare image array to the cache, returns false if no changes\n       * @return {?}\n       */\n\n    }, {\n      key: \"checkCache\",\n      value: function checkCache() {\n        var _this4 = this;\n\n        return !(this._urlCache.length === this.imageUrls.length && this._urlCache.every(function (cacheElement, i) {\n          return cacheElement === _this4.imageUrls[i];\n        }));\n      }\n      /**\n       * \\@description get the index for the slide to the left of the new slide\n       * @param {?=} i\n       * @return {?}\n       */\n\n    }, {\n      key: \"getLeftSideIndex\",\n      value: function getLeftSideIndex(i) {\n        if (i === undefined) {\n          i = this.slideIndex;\n        }\n\n        if (--i < 0) {\n          i = this.slides.length - 1;\n        }\n\n        return i;\n      }\n      /**\n       * \\@description get the index for the slide to the right of the new slide\n       * @param {?=} i\n       * @return {?}\n       */\n\n    }, {\n      key: \"getRightSideIndex\",\n      value: function getRightSideIndex(i) {\n        if (i === undefined) {\n          i = this.slideIndex;\n        }\n\n        if (++i >= this.slides.length) {\n          i = 0;\n        }\n\n        return i;\n      }\n      /**\n       * \\@description a trackBy function for the ngFor loops\n       * @param {?} index\n       * @param {?} slide\n       * @return {?}\n       */\n\n    }, {\n      key: \"trackByFn\",\n      value: function trackByFn(index, slide) {\n        return slide.image;\n      }\n    }]);\n\n    return SlideshowComponent;\n  }();\n\n  SlideshowComponent.ɵfac = function SlideshowComponent_Factory(t) {\n    return new (t || SlideshowComponent)(ɵngcc0.ɵɵdirectiveInject(SwipeService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.TransferState), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(DOCUMENT));\n  };\n\n  SlideshowComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: SlideshowComponent,\n    selectors: [[\"slideshow\"]],\n    viewQuery: function SlideshowComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(_c1, 5);\n        ɵngcc0.ɵɵviewQuery(_c2, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.container = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.prevArrow = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nextArrow = _t.first);\n      }\n    },\n    inputs: {\n      imageUrls: \"imageUrls\",\n      height: \"height\",\n      showArrows: \"showArrows\",\n      disableSwiping: \"disableSwiping\",\n      autoPlay: \"autoPlay\",\n      autoPlayInterval: \"autoPlayInterval\",\n      stopAutoPlayOnSlide: \"stopAutoPlayOnSlide\",\n      autoPlayWaitForLazyLoad: \"autoPlayWaitForLazyLoad\",\n      backgroundSize: \"backgroundSize\",\n      backgroundPosition: \"backgroundPosition\",\n      backgroundRepeat: \"backgroundRepeat\",\n      showDots: \"showDots\",\n      dotColor: \"dotColor\",\n      showCaptions: \"showCaptions\",\n      captionColor: \"captionColor\",\n      captionBackground: \"captionBackground\",\n      lazyLoad: \"lazyLoad\",\n      hideOnNoSlides: \"hideOnNoSlides\",\n      fullscreen: \"fullscreen\",\n      minHeight: \"minHeight\",\n      arrowSize: \"arrowSize\",\n      debug: \"debug\"\n    },\n    outputs: {\n      onSlideLeft: \"onSlideLeft\",\n      onSlideRight: \"onSlideRight\",\n      onSwipeLeft: \"onSwipeLeft\",\n      onSwipeRight: \"onSwipeRight\",\n      onFullscreenExit: \"onFullscreenExit\",\n      onIndexChanged: \"onIndexChanged\"\n    },\n    decls: 12,\n    vars: 11,\n    consts: [[1, \"fs-container\", 3, \"click\"], [\"title\", \"Back\", 1, \"arrow-exitfs\", \"prev\"], [1, \"slideshow-container\", 3, \"touchstart\", \"touchend\"], [\"container\", \"\"], [\"class\", \"slides\", 3, \"href\", \"title\", \"ngStyle\", \"selected\", \"hide-slide\", \"left-side\", \"right-side\", \"slide-in-left\", \"slide-in-right\", \"slide-out-left\", \"slide-out-right\", \"link\", \"click\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"arrow-container\", \"prev\", 3, \"click\"], [\"title\", \"Previous\", 1, \"arrow\", \"prev\"], [\"prevArrow\", \"\"], [1, \"arrow-container\", \"next\", 3, \"click\"], [\"title\", \"Next\", 1, \"arrow\", \"next\"], [\"nextArrow\", \"\"], [\"class\", \"slick-dots\", 4, \"ngIf\"], [1, \"slides\", 3, \"href\", \"title\", \"ngStyle\", \"click\"], [\"class\", \"loader\", 4, \"ngIf\"], [\"class\", \"caption\", 3, \"ngStyle\", \"innerHTML\", 4, \"ngIf\"], [1, \"loader\"], [1, \"caption\", 3, \"ngStyle\", \"innerHTML\"], [1, \"slick-dots\"], [3, \"slick-active\", \"click\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"click\"], [\"type\", \"button\"]],\n    template: function SlideshowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function SlideshowComponent_Template_div_click_0_listener($event) {\n          return ctx.exitFullScreen($event);\n        });\n        ɵngcc0.ɵɵelement(1, \"i\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵlistener(\"touchstart\", function SlideshowComponent_Template_div_touchstart_2_listener($event) {\n          return ctx.onSwipe($event, \"start\");\n        })(\"touchend\", function SlideshowComponent_Template_div_touchend_2_listener($event) {\n          return ctx.onSwipe($event, \"end\");\n        });\n        ɵngcc0.ɵɵtemplate(4, SlideshowComponent_a_4_Template, 3, 23, \"a\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵlistener(\"click\", function SlideshowComponent_Template_div_click_5_listener() {\n          return ctx.onSlide(-1);\n        });\n        ɵngcc0.ɵɵelement(6, \"i\", 6, 7);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(8, \"div\", 8);\n        ɵngcc0.ɵɵlistener(\"click\", function SlideshowComponent_Template_div_click_8_listener() {\n          return ctx.onSlide(1);\n        });\n        ɵngcc0.ɵɵelement(9, \"i\", 9, 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, SlideshowComponent_ul_11_Template, 2, 2, \"ul\", 11);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"display-none\", !ctx.fullscreen);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"slideshow-container-fs\", ctx.fullscreen);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.slides)(\"ngForTrackBy\", ctx.trackByFn);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"display-none\", !ctx.showArrows);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵclassProp(\"display-none\", !ctx.showArrows);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showDots);\n      }\n    },\n    directives: [ɵngcc2.NgForOf, ɵngcc2.NgIf, ɵngcc2.NgStyle],\n    styles: [\".display-none[_ngcontent-%COMP%] {\\n      display: none !important; }\\n\\n    .fs-container[_ngcontent-%COMP%] {\\n      display: block;\\n      cursor: pointer;\\n      position: fixed;\\n      z-index: 1;\\n      top: 16px;\\n      left: 16px;\\n      width: 46px;\\n      height: 46px;\\n      text-align: center;\\n      padding: 0;\\n      background-color: rgba(0, 0, 0, 0.2);\\n      -webkit-transition: all .2s ease-in-out;\\n      transition: all .2s ease-in-out; }\\n      .fs-container[_ngcontent-%COMP%]:hover {\\n        background-color: rgba(0, 0, 0, 0.33); }\\n      .fs-container[_ngcontent-%COMP%]   .arrow-exitfs[_ngcontent-%COMP%] {\\n        display: block;\\n        width: 30px;\\n        height: 30px;\\n        background: transparent;\\n        border-top: 2px solid #f2f2f2;\\n        -webkit-transition: all .2s ease-in-out;\\n        transition: all .2s ease-in-out; }\\n        .fs-container[_ngcontent-%COMP%]   .arrow-exitfs.prev[_ngcontent-%COMP%] {\\n          -webkit-transform: rotate(-45deg);\\n                  transform: rotate(-45deg);\\n          position: relative;\\n          left: 18px;\\n          top: 18px; }\\n        .fs-container[_ngcontent-%COMP%]   .arrow-exitfs[_ngcontent-%COMP%]:after {\\n          content: '';\\n          width: 30px;\\n          height: 30px;\\n          background: transparent;\\n          border-top: 2px solid #f2f2f2;\\n          -webkit-transform: rotate(90deg);\\n                  transform: rotate(90deg);\\n          position: absolute;\\n          left: -15px;\\n          top: -17px; }\\n\\n    .slideshow-container.slideshow-container-fs[_ngcontent-%COMP%] {\\n      position: fixed;\\n      left: 0;\\n      top: 0;\\n      width: 100%;\\n      height: 100%; }\\n\\n    .slideshow-container[_ngcontent-%COMP%] {\\n      position: relative;\\n      display: block;\\n      margin: auto;\\n      height: 100%;\\n      width: 100%;\\n      overflow: hidden; }\\n      .slideshow-container[_ngcontent-%COMP%]   .hide-slide[_ngcontent-%COMP%] {\\n        visibility: hidden;\\n        position: absolute;\\n        top: -100vw;\\n        left: -100vw;\\n        opacity: 0; }\\n      .slideshow-container[_ngcontent-%COMP%]   .slides[_ngcontent-%COMP%] {\\n        position: absolute;\\n        top: 0;\\n        height: 100%;\\n        width: 100%;\\n        visibility: visible;\\n        opacity: 1;\\n        display: block; }\\n        .slideshow-container[_ngcontent-%COMP%]   .slides.selected[_ngcontent-%COMP%] {\\n          left: 0; }\\n        .slideshow-container[_ngcontent-%COMP%]   .slides.left-slide[_ngcontent-%COMP%] {\\n          left: -100%; }\\n        .slideshow-container[_ngcontent-%COMP%]   .slides.right-slide[_ngcontent-%COMP%] {\\n          left: 100%; }\\n        .slideshow-container[_ngcontent-%COMP%]   .slides.slide-in-left[_ngcontent-%COMP%] {\\n          left: 0;\\n          -webkit-animation: slideInLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1);\\n                  animation: slideInLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\\n        .slideshow-container[_ngcontent-%COMP%]   .slides.slide-in-right[_ngcontent-%COMP%] {\\n          left: 0;\\n          -webkit-animation: slideInRight 0.5s cubic-bezier(0.42, 0, 0.58, 1);\\n                  animation: slideInRight 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\\n        .slideshow-container[_ngcontent-%COMP%]   .slides.slide-out-left[_ngcontent-%COMP%] {\\n          left: -100%;\\n          -webkit-animation: slideOutLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1);\\n                  animation: slideOutLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\\n        .slideshow-container[_ngcontent-%COMP%]   .slides.slide-out-right[_ngcontent-%COMP%] {\\n          left: 100%;\\n          -webkit-animation: slideOutRight 0.5s cubic-bezier(0.42, 0, 0.58, 1);\\n                  animation: slideOutRight 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\\n        .slideshow-container[_ngcontent-%COMP%]   .slides.link[_ngcontent-%COMP%] {\\n          cursor: pointer; }\\n        .slideshow-container[_ngcontent-%COMP%]   .slides[_ngcontent-%COMP%]:not(.link) {\\n          cursor: default; }\\n      .slideshow-container[_ngcontent-%COMP%]   .caption[_ngcontent-%COMP%] {\\n        position: absolute;\\n        bottom: 0;\\n        padding: 10px;\\n        width: 100%; }\\n      .slideshow-container[_ngcontent-%COMP%]   .arrow-container[_ngcontent-%COMP%] {\\n        display: -webkit-box;\\n        display: -ms-flexbox;\\n        display: flex;\\n        -webkit-box-align: center;\\n            -ms-flex-align: center;\\n                align-items: center;\\n        -webkit-box-pack: center;\\n            -ms-flex-pack: center;\\n                justify-content: center;\\n        position: absolute;\\n        top: 0;\\n        height: 100%;\\n        width: auto;\\n        cursor: pointer;\\n        background-size: 100%;\\n        background-image: -webkit-gradient(linear, left top, left bottom, from(transparent), to(transparent));\\n        background-image: linear-gradient(transparent, transparent);\\n        z-index: 100;\\n        -webkit-user-select: none;\\n           -moz-user-select: none;\\n            -ms-user-select: none;\\n                user-select: none; }\\n        .slideshow-container[_ngcontent-%COMP%]   .arrow-container[_ngcontent-%COMP%]:before {\\n          display: block;\\n          height: 100%;\\n          position: absolute;\\n          top: 0;\\n          left: 0;\\n          opacity: 0;\\n          width: 100%;\\n          z-index: -100;\\n          -webkit-transition: opacity 0.45s;\\n          transition: opacity 0.45s; }\\n        .slideshow-container[_ngcontent-%COMP%]   .arrow-container.prev[_ngcontent-%COMP%] {\\n          left: 0; }\\n          .slideshow-container[_ngcontent-%COMP%]   .arrow-container.prev[_ngcontent-%COMP%]:before {\\n            background-image: -webkit-gradient(linear, right top, left top, from(transparent), to(rgba(0, 0, 0, 0.75)));\\n            background-image: linear-gradient(to left, transparent, rgba(0, 0, 0, 0.75));\\n            content: ''; }\\n        .slideshow-container[_ngcontent-%COMP%]   .arrow-container.next[_ngcontent-%COMP%] {\\n          right: 0; }\\n          .slideshow-container[_ngcontent-%COMP%]   .arrow-container.next[_ngcontent-%COMP%]:before {\\n            background-image: -webkit-gradient(linear, left top, right top, from(transparent), to(rgba(0, 0, 0, 0.75)));\\n            background-image: linear-gradient(to right, transparent, rgba(0, 0, 0, 0.75));\\n            content: ''; }\\n        .slideshow-container[_ngcontent-%COMP%]   .arrow-container[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%] {\\n          display: block;\\n          margin: auto;\\n          width: 30px;\\n          height: 30px;\\n          background: transparent;\\n          border-top: 2px solid #f2f2f2;\\n          border-left: 2px solid #f2f2f2;\\n          -webkit-transition: all .2s ease-in-out;\\n          transition: all .2s ease-in-out;\\n          -webkit-user-select: none;\\n             -moz-user-select: none;\\n              -ms-user-select: none;\\n                  user-select: none; }\\n          .slideshow-container[_ngcontent-%COMP%]   .arrow-container[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%]:before {\\n            display: block;\\n            height: 200%;\\n            width: 200%;\\n            margin-left: -50%;\\n            margin-top: -50%;\\n            content: \\\"\\\";\\n            -webkit-transform: rotate(45deg);\\n                    transform: rotate(45deg); }\\n          .slideshow-container[_ngcontent-%COMP%]   .arrow-container[_ngcontent-%COMP%]   .arrow.prev[_ngcontent-%COMP%] {\\n            -webkit-transform: rotate(-45deg);\\n                    transform: rotate(-45deg);\\n            position: relative;\\n            left: 20px;\\n            margin-right: 10px; }\\n          .slideshow-container[_ngcontent-%COMP%]   .arrow-container[_ngcontent-%COMP%]   .arrow.next[_ngcontent-%COMP%] {\\n            -webkit-transform: rotate(135deg);\\n                    transform: rotate(135deg);\\n            position: relative;\\n            right: 20px;\\n            margin-left: 10px; }\\n      .slideshow-container[_ngcontent-%COMP%]   .slick-dots[_ngcontent-%COMP%] {\\n        display: block;\\n        bottom: 15px;\\n        z-index: 1;\\n        text-align: center;\\n        position: absolute;\\n        padding: 0;\\n        left: 0;\\n        right: 0;\\n        margin: 0 auto; }\\n        .slideshow-container[_ngcontent-%COMP%]   .slick-dots[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n          display: inline;\\n          margin: 0;\\n          padding: 0; }\\n          .slideshow-container[_ngcontent-%COMP%]   .slick-dots[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n            border: none;\\n            background: none;\\n            text-indent: -9999px;\\n            font-size: 0;\\n            width: 20px;\\n            height: 20px;\\n            outline: none;\\n            position: relative;\\n            z-index: 1;\\n            cursor: pointer; }\\n            .slideshow-container[_ngcontent-%COMP%]   .slick-dots[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:before {\\n              content: '';\\n              width: 4px;\\n              height: 4px;\\n              background: var(--dot-color, #FFF);\\n              border-radius: 4px;\\n              display: block;\\n              position: absolute;\\n              top: 50%;\\n              left: 50%;\\n              -webkit-transform: translate(-50%, -50%);\\n                      transform: translate(-50%, -50%);\\n              opacity: .7;\\n              -webkit-transition: all .5s ease-out;\\n              transition: all .5s ease-out; }\\n          .slideshow-container[_ngcontent-%COMP%]   .slick-dots[_ngcontent-%COMP%]   li.slick-active[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:before {\\n            -webkit-transform: translate(-50%, -50%) scale(1.4);\\n                    transform: translate(-50%, -50%) scale(1.4);\\n            opacity: 1; }\\n\\n    @media screen and (min-width: 768px) {\\n      .slideshow-container[_ngcontent-%COMP%]   .arrow-container[_ngcontent-%COMP%]:hover:before {\\n        opacity: 1; }\\n      .slideshow-container[_ngcontent-%COMP%]   .arrow-container[_ngcontent-%COMP%]:hover   .arrow[_ngcontent-%COMP%] {\\n        border-width: 4px; }\\n      .slideshow-container[_ngcontent-%COMP%]   .arrow-container[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%]:hover {\\n        border-width: 4px; } }\\n\\n    @-webkit-keyframes slideInRight {\\n      0% {\\n        left: -100%; }\\n      100% {\\n        left: 0; } }\\n\\n    @keyframes slideInRight {\\n      0% {\\n        left: -100%; }\\n      100% {\\n        left: 0; } }\\n\\n    @-webkit-keyframes slideInLeft {\\n      0% {\\n        left: 100%; }\\n      100% {\\n        left: 0; } }\\n\\n    @keyframes slideInLeft {\\n      0% {\\n        left: 100%; }\\n      100% {\\n        left: 0; } }\\n\\n    @-webkit-keyframes slideOutRight {\\n      0% {\\n        left: 0; }\\n      100% {\\n        left: -100%; } }\\n\\n    @keyframes slideOutRight {\\n      0% {\\n        left: 0; }\\n      100% {\\n        left: -100%; } }\\n\\n    @-webkit-keyframes slideOutLeft {\\n      0% {\\n        left: 0; }\\n      100% {\\n        left: 100%; } }\\n\\n    @keyframes slideOutLeft {\\n      0% {\\n        left: 0; }\\n      100% {\\n        left: 100%; } }\\n\\n    .loader[_ngcontent-%COMP%] {\\n      position: absolute;\\n      left: 50%;\\n      margin-left: -20px;\\n      top: 50%;\\n      margin-top: -20px;\\n      border: 5px solid #f3f3f3;\\n      border-top: 5px solid #555;\\n      border-radius: 50%;\\n      width: 50px;\\n      height: 50px;\\n      -webkit-animation: spin 1s linear infinite;\\n              animation: spin 1s linear infinite; }\\n\\n    @-webkit-keyframes spin {\\n      0% {\\n        -webkit-transform: rotate(0deg);\\n                transform: rotate(0deg); }\\n      100% {\\n        -webkit-transform: rotate(360deg);\\n                transform: rotate(360deg); } }\\n\\n    @keyframes spin {\\n      0% {\\n        -webkit-transform: rotate(0deg);\\n                transform: rotate(0deg); }\\n      100% {\\n        -webkit-transform: rotate(360deg);\\n                transform: rotate(360deg); } }\"]\n  });\n  /**\n   * @nocollapse\n   */\n\n  return SlideshowComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar SlideshowModule = /*#__PURE__*/(function () {\n  var SlideshowModule = /*#__PURE__*/_createClass(function SlideshowModule() {\n    _classCallCheck(this, SlideshowModule);\n  });\n\n  SlideshowModule.ɵfac = function SlideshowModule_Factory(t) {\n    return new (t || SlideshowModule)();\n  };\n\n  SlideshowModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: SlideshowModule\n  });\n  SlideshowModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [SwipeService],\n    imports: [[CommonModule, BrowserTransferStateModule]]\n  });\n  /**\n   * @nocollapse\n   */\n\n  return SlideshowModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SlideshowModule, {\n    declarations: function declarations() {\n      return [SlideshowComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, BrowserTransferStateModule];\n    },\n    exports: function exports() {\n      return [SlideshowComponent];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { SlideshowModule, SlideshowComponent as ɵa, SwipeService as ɵb }; //# sourceMappingURL=ng-simple-slideshow.js.map","map":null,"metadata":{},"sourceType":"module"}