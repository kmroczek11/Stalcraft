{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Kamil\\\\Desktop\\\\stalcraft\\\\Stalcraft\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Kamil\\\\Desktop\\\\stalcraft\\\\Stalcraft\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { isPlatformServer, isPlatformBrowser, CommonModule } from '@angular/common';\nimport { EventEmitter, Component, forwardRef, ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, Directive, Host, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n/**\n * @fileoverview added by tsickle\n * Generated from: slick.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Slick component\n */\n\nimport * as Éµngcc0 from '@angular/core';\nvar _c0 = [\"*\"];\nvar SlickCarouselComponent = /*#__PURE__*/(function () {\n  var SlickCarouselComponent = /*#__PURE__*/function () {\n    /**\n     * Constructor\n     * @param {?} el\n     * @param {?} zone\n     * @param {?} platformId\n     */\n    function SlickCarouselComponent(el, zone, platformId) {\n      _classCallCheck(this, SlickCarouselComponent);\n\n      this.el = el;\n      this.zone = zone;\n      this.platformId = platformId;\n      this.afterChange = new EventEmitter();\n      this.beforeChange = new EventEmitter();\n      this.breakpoint = new EventEmitter();\n      this.destroy = new EventEmitter();\n      this.init = new EventEmitter(); // access from parent component can be a problem with change detection timing. Please use afterChange output\n\n      this.currentIndex = 0;\n      this.slides = [];\n      this.initialized = false;\n      this._removedSlides = [];\n      this._addedSlides = [];\n    }\n    /**\n     * On component destroy\n     * @return {?}\n     */\n\n\n    _createClass(SlickCarouselComponent, [{\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.unslick();\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        this.ngAfterViewChecked();\n      }\n      /**\n       * On component view checked\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngAfterViewChecked\",\n      value: function ngAfterViewChecked() {\n        var _this = this;\n\n        if (isPlatformServer(this.platformId)) {\n          return;\n        }\n\n        if (this._addedSlides.length > 0 || this._removedSlides.length > 0) {\n          /** @type {?} */\n          var nextSlidesLength = this.slides.length - this._removedSlides.length + this._addedSlides.length;\n\n          if (!this.initialized) {\n            if (nextSlidesLength > 0) {\n              this.initSlick();\n            } // if nextSlidesLength is zere, do nothing\n\n          } else if (nextSlidesLength === 0) {\n            // unslick case\n            this.unslick();\n          } else {\n            this._addedSlides.forEach(\n            /**\n            * @param {?} slickItem\n            * @return {?}\n            */\n            function (slickItem) {\n              _this.slides.push(slickItem);\n\n              _this.zone.runOutsideAngular(\n              /**\n              * @return {?}\n              */\n              function () {\n                _this.$instance.slick('slickAdd', slickItem.el.nativeElement);\n              });\n            });\n\n            this._addedSlides = [];\n\n            this._removedSlides.forEach(\n            /**\n            * @param {?} slickItem\n            * @return {?}\n            */\n            function (slickItem) {\n              /** @type {?} */\n              var idx = _this.slides.indexOf(slickItem);\n\n              _this.slides = _this.slides.filter(\n              /**\n              * @param {?} s\n              * @return {?}\n              */\n              function (s) {\n                return s !== slickItem;\n              });\n\n              _this.zone.runOutsideAngular(\n              /**\n              * @return {?}\n              */\n              function () {\n                _this.$instance.slick('slickRemove', idx);\n              });\n            });\n\n            this._removedSlides = [];\n          }\n        }\n      }\n      /**\n       * init slick\n       * @return {?}\n       */\n\n    }, {\n      key: \"initSlick\",\n      value: function initSlick() {\n        var _this2 = this;\n\n        this.slides = this._addedSlides;\n        this._addedSlides = [];\n        this._removedSlides = [];\n        this.zone.runOutsideAngular(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this2.$instance = jQuery(_this2.el.nativeElement);\n\n          _this2.$instance.on('init',\n          /**\n          * @param {?} event\n          * @param {?} slick\n          * @return {?}\n          */\n          function (event, slick) {\n            _this2.zone.run(\n            /**\n            * @return {?}\n            */\n            function () {\n              _this2.init.emit({\n                event: event,\n                slick: slick\n              });\n            });\n          });\n\n          _this2.$instance.slick(_this2.config);\n\n          _this2.zone.run(\n          /**\n          * @return {?}\n          */\n          function () {\n            var _a;\n\n            _this2.initialized = true;\n            _this2.currentIndex = ((_a = _this2.config) === null || _a === void 0 ? void 0 : _a.initialSlide) || 0;\n          });\n\n          _this2.$instance.on('afterChange',\n          /**\n          * @param {?} event\n          * @param {?} slick\n          * @param {?} currentSlide\n          * @return {?}\n          */\n          function (event, slick, currentSlide) {\n            _this2.zone.run(\n            /**\n            * @return {?}\n            */\n            function () {\n              _this2.afterChange.emit({\n                event: event,\n                slick: slick,\n                currentSlide: currentSlide,\n                first: currentSlide === 0,\n                last: slick.$slides.length === currentSlide + slick.options.slidesToScroll\n              });\n\n              _this2.currentIndex = currentSlide;\n            });\n          });\n\n          _this2.$instance.on('beforeChange',\n          /**\n          * @param {?} event\n          * @param {?} slick\n          * @param {?} currentSlide\n          * @param {?} nextSlide\n          * @return {?}\n          */\n          function (event, slick, currentSlide, nextSlide) {\n            _this2.zone.run(\n            /**\n            * @return {?}\n            */\n            function () {\n              _this2.beforeChange.emit({\n                event: event,\n                slick: slick,\n                currentSlide: currentSlide,\n                nextSlide: nextSlide\n              });\n\n              _this2.currentIndex = nextSlide;\n            });\n          });\n\n          _this2.$instance.on('breakpoint',\n          /**\n          * @param {?} event\n          * @param {?} slick\n          * @param {?} breakpoint\n          * @return {?}\n          */\n          function (event, slick, breakpoint) {\n            _this2.zone.run(\n            /**\n            * @return {?}\n            */\n            function () {\n              _this2.breakpoint.emit({\n                event: event,\n                slick: slick,\n                breakpoint: breakpoint\n              });\n            });\n          });\n\n          _this2.$instance.on('destroy',\n          /**\n          * @param {?} event\n          * @param {?} slick\n          * @return {?}\n          */\n          function (event, slick) {\n            _this2.zone.run(\n            /**\n            * @return {?}\n            */\n            function () {\n              _this2.destroy.emit({\n                event: event,\n                slick: slick\n              });\n\n              _this2.initialized = false;\n            });\n          });\n        });\n      }\n      /**\n       * @param {?} slickItem\n       * @return {?}\n       */\n\n    }, {\n      key: \"addSlide\",\n      value: function addSlide(slickItem) {\n        this._addedSlides.push(slickItem);\n      }\n      /**\n       * @param {?} slickItem\n       * @return {?}\n       */\n\n    }, {\n      key: \"removeSlide\",\n      value: function removeSlide(slickItem) {\n        this._removedSlides.push(slickItem);\n      }\n      /**\n       * Slick Method\n       * @param {?} index\n       * @return {?}\n       */\n\n    }, {\n      key: \"slickGoTo\",\n      value: function slickGoTo(index) {\n        var _this3 = this;\n\n        this.zone.runOutsideAngular(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this3.$instance.slick('slickGoTo', index);\n        });\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"slickNext\",\n      value: function slickNext() {\n        var _this4 = this;\n\n        this.zone.runOutsideAngular(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this4.$instance.slick('slickNext');\n        });\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"slickPrev\",\n      value: function slickPrev() {\n        var _this5 = this;\n\n        this.zone.runOutsideAngular(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this5.$instance.slick('slickPrev');\n        });\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"slickPause\",\n      value: function slickPause() {\n        var _this6 = this;\n\n        this.zone.runOutsideAngular(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this6.$instance.slick('slickPause');\n        });\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"slickPlay\",\n      value: function slickPlay() {\n        var _this7 = this;\n\n        this.zone.runOutsideAngular(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this7.$instance.slick('slickPlay');\n        });\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"unslick\",\n      value: function unslick() {\n        var _this8 = this;\n\n        if (this.$instance) {\n          this.zone.runOutsideAngular(\n          /**\n          * @return {?}\n          */\n          function () {\n            _this8.$instance.slick('unslick');\n          });\n          this.$instance = undefined;\n        }\n\n        this.initialized = false;\n      }\n      /**\n       * @param {?} changes\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        var _this9 = this;\n\n        if (this.initialized) {\n          /** @type {?} */\n          var config = changes['config'];\n\n          if (config.previousValue !== config.currentValue && config.currentValue !== undefined) {\n            /** @type {?} */\n            var refresh = config.currentValue['refresh'];\n            /** @type {?} */\n\n            var newOptions = Object.assign({}, config.currentValue);\n            delete newOptions['refresh'];\n            this.zone.runOutsideAngular(\n            /**\n            * @return {?}\n            */\n            function () {\n              _this9.$instance.slick('slickSetOption', newOptions, refresh);\n            });\n          }\n        }\n      }\n    }]);\n\n    return SlickCarouselComponent;\n  }();\n\n  SlickCarouselComponent.Éµfac = function SlickCarouselComponent_Factory(t) {\n    return new (t || SlickCarouselComponent)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone), Éµngcc0.ÉµÉµdirectiveInject(PLATFORM_ID));\n  };\n\n  SlickCarouselComponent.Éµcmp = /*@__PURE__*/Éµngcc0.ÉµÉµdefineComponent({\n    type: SlickCarouselComponent,\n    selectors: [[\"ngx-slick-carousel\"]],\n    inputs: {\n      config: \"config\"\n    },\n    outputs: {\n      afterChange: \"afterChange\",\n      beforeChange: \"beforeChange\",\n      breakpoint: \"breakpoint\",\n      destroy: \"destroy\",\n      init: \"init\"\n    },\n    exportAs: [\"slick-carousel\"],\n    features: [Éµngcc0.ÉµÉµProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(\n      /**\n      * @return {?}\n      */\n      function () {\n        return SlickCarouselComponent;\n      }),\n      multi: true\n    }]), Éµngcc0.ÉµÉµNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function SlickCarouselComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        Éµngcc0.ÉµÉµprojectionDef();\n        Éµngcc0.ÉµÉµprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n  /** @nocollapse */\n\n  return SlickCarouselComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /** @type {?} */\n  SlickCarouselComponent.prototype.config;\n  /** @type {?} */\n\n  SlickCarouselComponent.prototype.afterChange;\n  /** @type {?} */\n\n  SlickCarouselComponent.prototype.beforeChange;\n  /** @type {?} */\n\n  SlickCarouselComponent.prototype.breakpoint;\n  /** @type {?} */\n\n  SlickCarouselComponent.prototype.destroy;\n  /** @type {?} */\n\n  SlickCarouselComponent.prototype.init;\n  /** @type {?} */\n\n  SlickCarouselComponent.prototype.$instance;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  SlickCarouselComponent.prototype.currentIndex;\n  /** @type {?} */\n\n  SlickCarouselComponent.prototype.slides;\n  /** @type {?} */\n\n  SlickCarouselComponent.prototype.initialized;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  SlickCarouselComponent.prototype._removedSlides;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  SlickCarouselComponent.prototype._addedSlides;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  SlickCarouselComponent.prototype.el;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  SlickCarouselComponent.prototype.zone;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  SlickCarouselComponent.prototype.platformId;\n}\n\nvar SlickItemDirective = /*#__PURE__*/(function () {\n  var SlickItemDirective = /*#__PURE__*/function () {\n    /**\n     * @param {?} el\n     * @param {?} platformId\n     * @param {?} carousel\n     */\n    function SlickItemDirective(el, platformId, carousel) {\n      _classCallCheck(this, SlickItemDirective);\n\n      this.el = el;\n      this.platformId = platformId;\n      this.carousel = carousel;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    _createClass(SlickItemDirective, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        if (isPlatformBrowser(this.platformId)) {\n          this.carousel.addSlide(this);\n        }\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        if (isPlatformBrowser(this.platformId)) {\n          this.carousel.removeSlide(this);\n        }\n      }\n    }]);\n\n    return SlickItemDirective;\n  }();\n\n  SlickItemDirective.Éµfac = function SlickItemDirective_Factory(t) {\n    return new (t || SlickItemDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(PLATFORM_ID), Éµngcc0.ÉµÉµdirectiveInject(SlickCarouselComponent, 1));\n  };\n\n  SlickItemDirective.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n    type: SlickItemDirective,\n    selectors: [[\"\", \"ngxSlickItem\", \"\"]]\n  });\n  /** @nocollapse */\n\n  return SlickItemDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /** @type {?} */\n  SlickItemDirective.prototype.el;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  SlickItemDirective.prototype.platformId;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  SlickItemDirective.prototype.carousel;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar SlickCarouselModule = /*#__PURE__*/(function () {\n  var SlickCarouselModule = /*#__PURE__*/_createClass(function SlickCarouselModule() {\n    _classCallCheck(this, SlickCarouselModule);\n  });\n\n  SlickCarouselModule.Éµfac = function SlickCarouselModule_Factory(t) {\n    return new (t || SlickCarouselModule)();\n  };\n\n  SlickCarouselModule.Éµmod = /*@__PURE__*/Éµngcc0.ÉµÉµdefineNgModule({\n    type: SlickCarouselModule\n  });\n  SlickCarouselModule.Éµinj = /*@__PURE__*/Éµngcc0.ÉµÉµdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return SlickCarouselModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(SlickCarouselModule, {\n    declarations: function declarations() {\n      return [SlickCarouselComponent, SlickItemDirective];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [SlickCarouselComponent, SlickItemDirective];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: ngx-slick-carousel.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { SlickCarouselComponent, SlickCarouselModule, SlickItemDirective }; //# sourceMappingURL=ngx-slick-carousel.js.map","map":null,"metadata":{},"sourceType":"module"}